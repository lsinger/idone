#!/usr/bin/env ruby

USERNAME = ENV.fetch('IDONETHIS_USERNAME')
TOKEN = ENV.fetch('IDONETHIS_TOKEN')
TEAM = ENV.fetch('IDONETHIS_TEAM')

API_ROOT = 'https://idonethis.com/api/v0.1'

OK = '✔︎'
NOOK = '╳'

if [USERNAME, TOKEN, TEAM].any?(&:empty?)
  help
  abort
end

require 'json'
require 'net/http'
require 'pp'

require 'optparse'

def help
  puts <<-EOF.gsub(/^.*#./, '')
     # Quick and dirty script for idonethis.com
     #
     # Requires follwing env variables:
     # - IDONETHIS_TEAM - team shortname (found in url)
     # - IDONETHIS_TOKEN - your idonethis api token
     # - IDONETHIS_USERNAME - your idonethis username
     # Usage:
     #   idone "Finished idone script" - will create a new done
     #   idone "[ ] I will get this done later" - to create a goal
     #   idone - will list yesterday and today's dones

EOF
end

def req(method: Net::HTTP::Get, path: '/dones/', params: {}, data: {})
  param_str = ['?', URI.encode_www_form(params)].join ''
  uri = URI.parse(API_ROOT + path + param_str)

  request = method.new uri
  request['Content-Type'] = 'application/json'
  request['Authorization'] = "Token #{TOKEN}"

  request.set_form_data data unless data.empty?

  resp = Net::HTTP.start(uri.host, uri.port, use_ssl: true) do |http|
    http.request(request)
  end

  JSON.parse(resp.body)
end

def create_done(done_text, _is_goal = false)
  res = req(method: Net::HTTP::Post, data: { raw_text: done_text, team: TEAM })
  show_create(res)
end

def show_list(response)
  response['results'].map do |res|
    show_done(res)
  end
end

DONE_TEMPLATE = <<-EOF
%{sigil} | %{id} | %{owner} | %{text}
EOF

def show_done(done)
  sigil = done['goal_completed'] ? OK : NOOK
  puts DONE_TEMPLATE % { id: done['id'],
                         owner: done['owner'],
                         sigil: sigil,
                         text: done['markedup_text'] }
end

def show_create(response)
  if response['ok']
    puts "#{OK} Ok"
  else
    puts "#{NOOK} Failed"
    pp response
  end
end

done_text = ARGV[0]

if ['-h', '-?', '--help'].include? done_text.to_s.strip.chomp
  help
  exit 0
end

create_done(done_text) unless done_text.nil? || done_text.empty?

# TODO: add swtich for showing only my dones
puts '> Yesterday'
show_list req params: { done_date: 'yesterday' }
puts

puts '> Today'
show_list req params: { done_date: 'today' }
